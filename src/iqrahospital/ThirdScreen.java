package iqrahospital;

import Images.AppIcon;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class ThirdScreen extends javax.swing.JFrame {

    /**
     * Creates new form ThirdScreen
     */
    String name;
    int generatedId;

    public ThirdScreen(String name, int generatedId) {
        this.name = name;
        this.generatedId = generatedId;
        initComponents();
        AppIcon.setIcon(this);
        updateCategories();
        LabelName.setText("Hi " + name + "!");

    }

    public ThirdScreen() {

        initComponents();

        updateCategories();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SpecialityDropdown = new javax.swing.JComboBox<>();
        DoctorsDropdown = new javax.swing.JComboBox<>();
        LabelName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TimeDropdown = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IQRA HOSPITAL");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(18, 25, 67));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ScreensLogo.png"))); // NOI18N
        jLabel1.setAlignmentX(1.0F);
        jLabel1.setAlignmentY(1.0F);

        SpecialityDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpecialityDropdownActionPerformed(evt);
            }
        });

        DoctorsDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorsDropdownActionPerformed(evt);
            }
        });

        LabelName.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 15)); // NOI18N
        LabelName.setForeground(new java.awt.Color(255, 255, 255));
        LabelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelName.setText("Hi, name!");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Choose Speciality, Doctor & Timeslot");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("SELECT DOCTOR");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SELECT SPECIALITY");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("SELECT TIMESLOT");

        TimeDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeDropdownActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(18, 25, 67));
        btnNext.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText("Next →");
        btnNext.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(18, 25, 67));
        btnBack.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("← Back");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TimeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(DoctorsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SpecialityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpecialityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TimeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
String selectedCategory;
    String selectedDoctor;
    String selectedTime;
    private void SpecialityDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpecialityDropdownActionPerformed
        selectedCategory = SpecialityDropdown.getSelectedItem().toString();
        if (!selectedCategory.equals("Select Speciality")) {
            updateSubcategories(selectedCategory);
        } else {
            DoctorsDropdown.removeAllItems();
            TimeDropdown.removeAllItems();
        }
    }//GEN-LAST:event_SpecialityDropdownActionPerformed

    private void DoctorsDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorsDropdownActionPerformed

        if (DoctorsDropdown.getSelectedItem() != null) {
            selectedDoctor = DoctorsDropdown.getSelectedItem().toString();
        } else {
            selectedDoctor = null;
        }
        if (selectedDoctor != null && !selectedDoctor.equals("Select Doctor")) {
            updateTimeslots(selectedDoctor);
        } else {
            TimeDropdown.removeAllItems();
        }

    }//GEN-LAST:event_DoctorsDropdownActionPerformed

    private void TimeDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeDropdownActionPerformed
        if (TimeDropdown.getSelectedItem() != null) {
            selectedTime = TimeDropdown.getSelectedItem().toString();
        } else {
            selectedTime = null;
        }
    }//GEN-LAST:event_TimeDropdownActionPerformed
    String day;
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        System.out.println(selectedDoctor);
        System.out.println(selectedCategory);
        System.out.println(selectedTime);

        String[] words = selectedTime.split(" ");

        if (words.length == 2) {
            day = words[0];
            String time = words[1];
        }

        int mrNumber = generatedId;
        try {

            //Set Driver Of SQL
            Class.forName("com.mysql.jdbc.Driver");

            //Set Connection with localhost server
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");

            // UPDATE Query of SQL using to get replace data on DB
            String updateStatement = "UPDATE patientdata SET speciality = ?, Doctor = ?, day = ? ,timeslot = ? WHERE mrNumber = ?";

            //PreparedStatement is used to execute SQL Queries
            PreparedStatement ptst = conn.prepareStatement(updateStatement);

            //Set parameter value where ? in SQL Query
            ptst.setString(1, selectedCategory);
            ptst.setString(2, selectedDoctor);
            ptst.setString(3, day);
            ptst.setString(4, selectedTime);
            ptst.setInt(5, mrNumber);
            ptst.executeUpdate();

            conn.close();
            Payment pay = new Payment(selectedDoctor, mrNumber);
            pay.setVisible(true);
            dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e + "Something went wrong! Try again later");
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FirstScreen fs = new FirstScreen();
        fs.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    public void updateCategories() {
        SpecialityDropdown.removeAllItems();
        SpecialityDropdown.addItem("Select Speciality");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");

            // Retrieve the data using the unique ID
            String selectStatement = "SELECT Speciality FROM doctors";
            PreparedStatement stmt = conn.prepareStatement(selectStatement);
            ResultSet result = stmt.executeQuery();
            while (result.next()) {
                String specialityName = result.getString("Speciality");

                if (!specialityAlreadyAdded(specialityName)) {  // Check if the specialty is not already added
                    SpecialityDropdown.addItem(specialityName);
                }
            }
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e + "Something went wrong! Try again later");
        }
    }

    private boolean specialityAlreadyAdded(String specialityName) {
        for (int i = 0; i < SpecialityDropdown.getItemCount(); i++) {
            if (specialityName.equals(SpecialityDropdown.getItemAt(i))) {
                return true;
            }
        }
        return false;
    }

    public void updateSubcategories(String selectedCategory) {

        DoctorsDropdown.removeAllItems();
        DoctorsDropdown.addItem("Select Doctor");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");

            String selectStatement = "SELECT DoctorName FROM doctors WHERE speciality = ?";
            PreparedStatement stmt = conn.prepareStatement(selectStatement);
            stmt.setString(1, selectedCategory);

            ResultSet result = stmt.executeQuery();
            while (result.next()) {
                String subcategory = result.getString("DoctorName");
                DoctorsDropdown.addItem(subcategory);
            }

            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Something went wrong! Try again later.\n" + e.getMessage());
        }

    }

    public void updateTimeslots(String selectedDoctor) {
        TimeDropdown.removeAllItems();
        TimeDropdown.addItem("Select Timeslot");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");

            String selectStatement = "SELECT * FROM timeslots WHERE DoctorName = ?";
            PreparedStatement stmt = conn.prepareStatement(selectStatement);
            stmt.setString(1, selectedDoctor);

            ResultSet result = stmt.executeQuery();
            while (result.next()) {
                String timeslot = result.getString("timeslot");
                String day = result.getString("day");
                TimeDropdown.addItem(day + " (" + timeslot + "))");
            }

            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Something went wrong! Try again later.\n" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThirdScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DoctorsDropdown;
    private javax.swing.JLabel LabelName;
    private javax.swing.JComboBox<String> SpecialityDropdown;
    private javax.swing.JComboBox<String> TimeDropdown;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
