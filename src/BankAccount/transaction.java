/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BankAccount;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shada
 */
public class transaction extends javax.swing.JFrame {

    private LinkedList<String[]> transactions;

    /**
     * Creates new form transaction
     */
    public transaction() {
        initComponents();
        transactions = new LinkedList<>();
        //updateTable();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        transTable = new javax.swing.JTable();
        popBtn = new javax.swing.JButton();
        push = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        transTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transTable);
        if (transTable.getColumnModel().getColumnCount() > 0) {
            transTable.getColumnModel().getColumn(0).setMinWidth(150);
            transTable.getColumnModel().getColumn(1).setMinWidth(150);
            transTable.getColumnModel().getColumn(2).setMinWidth(25);
        }

        popBtn.setText("POP");
        popBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popBtnActionPerformed(evt);
            }
        });

        push.setText("PUSH");
        push.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(push)
                        .addGap(34, 34, 34)
                        .addComponent(popBtn)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(popBtn)
                    .addComponent(push))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushActionPerformed
        pushTransaction();
    }//GEN-LAST:event_pushActionPerformed

    private void popBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popBtnActionPerformed
        popTransaction();
    }//GEN-LAST:event_popBtnActionPerformed

    public void updateTable(){
        DefaultTableModel tableModel = (DefaultTableModel) transTable.getModel();
        tableModel.setRowCount(0); // Clear the table

        try {
            // Establish database connection
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");
            String selectStatement = "SELECT * FROM transaction WHERE SenderNo = ? OR ReceiverNo = ?";
            PreparedStatement stmt = conn.prepareStatement(selectStatement);
            stmt.setInt(1, 54326);
            stmt.setInt(2, 54326);
            ResultSet resultSet = stmt.executeQuery();

            // Process the retrieved data in a loop
            while (resultSet.next()) {
                String senNo = resultSet.getString("SenderNo");
                String senName = resultSet.getString("SenderName");
                String recNo = resultSet.getString("ReceiverNo");
                String recName = resultSet.getString("ReceiverName");
                String amount = resultSet.getString("Amount");
                String date = resultSet.getString("date");

                // Add data to the table model
                Object[] rowData = {senNo + " (" + senName + ")", recNo + " (" + recName + ")", amount + ".00", date};
                tableModel.addRow(rowData);
            }

            // Close the database connection
            resultSet.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void popTransaction() {
        if (!transactions.isEmpty()) {
            DefaultTableModel tableModel = (DefaultTableModel) transTable.getModel();
            // Remove the first (oldest) transaction from the LinkedList
            transactions.removeFirst();

            // Remove the first row from the table model
            tableModel.removeRow(0);
        }
    }

    public void pushTransaction() {
        try {
            // Establish database connection
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/iqrahospital", "root", "");
            
            // Your database query to fetch the next transaction
            String selectStatement = "SELECT * FROM transaction WHERE SenderNo = ? OR ReceiverNo = ?";
            PreparedStatement stmt = conn.prepareStatement(selectStatement);
            stmt.setInt(1, 54326);
            stmt.setInt(2, 54326);
            ResultSet resultSet = stmt.executeQuery();

            // Get the first transaction from the database
            String[] rowData = null;
            if (resultSet.next()) {
                String senNo = resultSet.getString("SenderNo");
                String senName = resultSet.getString("SenderName");
                String recNo = resultSet.getString("ReceiverNo");
                String recName = resultSet.getString("ReceiverName");
                String amount = resultSet.getString("Amount");
                String date = resultSet.getString("date");

                // Create the rowData array
                rowData = new String[]{
                        senNo + " (" + senName + ")",
                        recNo + " (" + recName + ")",
                        amount + ".00",
                        date
                };
            }

            if (rowData != null) {
                // Add transaction data to the LinkedList
                transactions.addLast(rowData);

                // Add data to the table model
                DefaultTableModel tableModel = (DefaultTableModel) transTable.getModel();
                tableModel.addRow(rowData);
            }

            // Close the database connection
            resultSet.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton popBtn;
    private javax.swing.JButton push;
    private javax.swing.JTable transTable;
    // End of variables declaration//GEN-END:variables
}
